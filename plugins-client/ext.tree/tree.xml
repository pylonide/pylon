<a:application xmlns:a="https://github.com/pylonide/pylon">
    <a:script><![CDATA[
        function filesort(value, args, xmlNode) {
            return (xmlNode.tagName == "folder" ? 0 : 1) + value.toLowerCase();
        }

        function createPath(a, b){
            return b + "/" + ppc.getFilename(a);
        }
    ]]></a:script>
    <a:window id="winFilesViewer"
      flex     = "1"
      skin     = "fm-window"
      title    = "Workspace Files"
      modal    = "false"
      buttons  = "close"
      minwidth = "130"
      optimize = "true">
        <a:button
          skin="header-btn"
          class="panel-settings"
          submenu="mnuFilesSettings"/>

        <!--a:button skin="header-btn" icon="order.png" top="-22" right="7"></a:button-->

        <a:menu id="mnuFilesSettings">
            <a:item onclick="require('ext/tree/tree').refresh()">Refresh Project Tree</a:item>
            <a:divider />
        </a:menu>

        <a:vsplitbox id="vboxTreeContainer" anchors="0 0 0 0" minheight="1">
            <a:tree id="trFiles" canrename="true" border="0" simpledata="true"
              contextmenu="mnuCtxTree" multiselect="true" reselectable="true"
              onbeforeremove="return require('core/util').removeInteractive(this)"
              onbeforemove="this.disable();"
              scrollbar="sbShared 2 2 2"
            >
                <a:each match="[project|file|folder]" sort="[@name]" sort-method="filesort">
                    <a:insert match="[folder]" get="{davProject.readdir(%[.].getAttribute('path'))}" />
                    <a:caption match="[@name]" value="{([../@changed] == 1 ? '*' : '') + [.]}" />
                    <a:icon match="[folder|project]" value="folder.png" />
                    <a:selectable match="[folder|file[not(@type='fileupload')]]" />
                    <a:icon match="[file[@type='fileupload']]" value="file-tree-load-spinner.gif" />
                    <a:css match="[file[@type='fileupload']]" value="fileupload" />
                    <a:icon match="[file]" value="{require('core/util').getFileIcon(%[.])}" />
                </a:each>

                <a:add type="folder" get="{davProject.mkdir(%[.].getAttribute('path'), 'New Folder')}" />
                <a:add type="file" get="{davProject.create(%[.].getAttribute('path'), 'New File.txt', '')}" />
                <a:rename match="[file|folder[not(@root)]]" set="{require('ext/tree/tree').renameFile(%[.])}" />
                <a:move set="{require('ext/tree/tree').moveFile(%[.], createPath(%[.].getAttribute('path'), %[../.].getAttribute('path')))}"/>

                <a:remove match="[file|folder]" set="{require('ext/filesystem/filesystem').remove(%[.])}"/>
                <a:copy match="[file|folder]" set="{
                    davProject.copy([@path], createPath(%[.].getAttribute('newname') || %[.].getAttribute('path'), %[../.].getAttribute('path')))
                }" undo="{

                }"/>

                <a:drag match="[folder|file]" />
                <a:drop match="[folder|file]" target="[folder]"
                    action="tree-append" copy="{event.ctrlKey}" />
                <a:drop match="[folder|file]" target="[file]"
                    action="insert-before" copy="{event.ctrlKey}" />
            </a:tree>
        </a:vsplitbox>

        <a:menu id="mnuCtxTree" disabled="{{!stServerConnected.active}}" render="runtime">
            <a:item match="[file]" class="strong"  onclick="
                require('ext/tree/tree').openSelection();
            ">Edit</a:item>
            <a:divider />
            <a:item onclick="
              var path = trFiles.getSelection()[0].getAttribute('path');
              var url = location.protocol + '//' + location.host + path;
              require('ext/preview/preview').preview(url, { path: path });
            ">Preview</a:item>
            <a:divider />
            <a:item onclick="require('ext/tree/tree').refresh()">Refresh</a:item>
            <a:item match="[file|folder[not(@root)]]" onclick="ppc.activeElement.startRename()" visible="{!require('core/ide').readonly}">Rename</a:item>
            <a:item match="[file|folder[not(@root)]]" onclick="ppc.activeElement.remove()" visible="{!require('core/ide').readonly}">Delete</a:item>
            <a:divider />
            <a:item match="[file|folder]" command="searchinfiles">Search Files Here</a:item>
            <a:divider visible="{!require('core/ide').readonly}"/>
            <a:item match="[file|folder|project]" visible="{!require('core/ide').readonly}" onclick="
                var store = ppc.clipboard.store;
                ppc.clipboard.put(trFiles.getSelection().map(function (node) {
                    return ppc.xmldb.cleanNode(node.cloneNode(false))
                }));
                ppc.clipboard.copied = true;
                ppc.clipboard.pasteSelection(ppc.activeElement,
                    trFiles.selected ? trFiles.selected.parentNode : trFiles.getFirstTraverseNode());
                ppc.clipboard.store = store;
            ">Duplicate</a:item>
            <a:divider visible="{!require('core/ide').readonly}"/>
            <a:item match="[file|folder[not(@root)]]" command="cut" visible="{!require('core/ide').readonly}">Cut</a:item>
            <a:item match="[file|folder[not(@root)]]" command="copy" visible="{!require('core/ide').readonly}">Copy</a:item>
            <a:item match="[file|folder|project]" disabled="{ppc.clipboard.empty}" visible="{!require('core/ide').readonly}" command="paste">Paste</a:item>
            <a:divider visible="{!require('core/ide').readonly}"/>
            <a:item id="itemCtxTreeNewFile" match="[file|folder|project]" visible="{!require('core/ide').readonly}" 
              onclick="
                require('ext/filesystem/filesystem').createFile();
            ">New File</a:item>
            <a:item match="[file|folder|project]" visible="{!require('core/ide').readonly}" onclick="
                require('ext/filesystem/filesystem').createFolder();
            ">New Folder</a:item>
        </a:menu>
    </a:window>
</a:application>

